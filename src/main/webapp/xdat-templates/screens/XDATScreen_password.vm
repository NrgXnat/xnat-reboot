##Copyright 2005 Harvard University / Howard Hughes Medical Institute (HHMI) All Rights Reserved
$page.setTitle("XNAT - Change Password")
$page.setLinkColor($ui.alink)
$page.setVlinkColor($ui.vlink)

## #parse("/screens/userValidationJS.vm")
<script language="javascript">
    console.log('XNATScreen_password.vm');

    $(document).ready(function(){
        // remove any other event handlers on the form submit and use XNAT.validate to validate multiple conditions on each field.
        $('#password_change').off('submit').on('submit',function(e){
            // e.preventDefault();

            var errorCount = 0, errorMessages = [];
            var _form = $(this);

            // define fields to validate
            var currentPassword = _form.find('input[name=current_password]');
            var newPassword = _form.find('#new_password');
            var confirmPassword = _form.find('#confirm_password');

            // define specific tests
            var passwordComplexityRegex = '$siteConfig.passwordComplexity'; // note: a regex bounded by slashes will fail to process. These are prevented from being added in the site admin UI.
            if (passwordComplexityRegex.indexOf('^') !== 0) {
                passwordComplexityRegex = '^'+passwordComplexityRegex+'$'; // ensure that the regex is bound to the first and last characters of the user's entry, to match backend processing.
            }
            var passwordComplexityMessage = '$!turbineUtils.escapeJS($siteConfig.passwordComplexityMessage)';
            if (passwordComplexityMessage.length === 0) passwordComplexityMessage = 'Password must comply with XNAT security policies.';

            // new password
            var validateNewPass = XNAT.validate(newPassword).reset().chain();
            validateNewPass.minLength(1).failure('New Password: field cannot be empty');
            validateNewPass.maxLength(255).failure('New Password: field cannot be longer than 255 characters');
            validateNewPass.pattern(passwordComplexityRegex).failure('New Password: '+ passwordComplexityMessage);

            // confirm password
            var validateConfirmPass = XNAT.validate(confirmPassword).reset().chain();
            validateConfirmPass.minLength(1).failure('Confirm Password: field cannot be empty');
            validateConfirmPass.maxLength(255).failure('Confirm Password: field cannot be longer than 255 characters');
            validateConfirmPass.pattern(passwordComplexityRegex).failure('Confirm Password: ' + passwordComplexityMessage);
            validateConfirmPass.matches(newPassword).failure('Password fields must match');

            var validators = [validateNewPass,validateConfirmPass];

            // current password
            var validateCurrentPassword;
            if(currentPassword && currentPassword.length > 0) {
                validateCurrentPassword = XNAT.validate(currentPassword).minLength(1).failure("Current Password: field cannot be empty");
                validators.unshift(validateCurrentPassword);
            }


            validators.forEach(function(item){
                item.check();
                errorCount += item.messages.length;
                item.messages.forEach(function(msg){ errorMessages.push(msg) });
            });

            if (errorCount) {
                xmodal.message({ title: 'Form Validation Error', content: '<p>Errors found:</p><ul><li>' + errorMessages.join('</li><li>') + '</li></ul>', height: 300 });
                return false;
            } else {
                return true;
            }
        });
    });

</script>

<div class="user_account_settings">

	<form id="password_change" class="noHide xnat-form optOutOfXnatDefaultFormValidation validate" name="form2" method="post" action="$link.setAction("ModifyPassword")">
		<h3>Change Password for $!item.getProperty("firstname") $!item.getProperty("lastname") ($!item.getProperty("login"))</h3>
		<fieldset>
			#if (!$forgot)
				<p>
                    <label for="current_password">Current Password</label>
					<input id="current_password" type="password" name="current_password" value="" autocomplete="off" />
				</p>
			#end
			<p>
                <label for="xdat:user.primary_password">New Password</label>
				<input id="new_password" type="password" name="xdat:user.primary_password" value="" autocomplete="off"/>
			</p>
			<p>
                <label for="confirm_password">Confirm New Password</label>
				<input id="confirm_password" type="password" name="confirm_password" value="" autocomplete="off"/>
			</p>
			#xdatHiddenBox("xdat:user.xdat_user_id" $item "")
			#xdatHiddenBox("xdat:user.login" $item "")
			#xdatEditProps($item $edit_screen)
			<p>
				<input type="submit" name="eventSubmit_doSetup" value="Submit" />
            </p>
        </fieldset>
	</form>
</div>
